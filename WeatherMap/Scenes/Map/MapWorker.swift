//
//  MapWorker.swift
//  WeatherMap
//
//  Created by Kamil Chmiel on 18.10.2018.
//  Copyright (c) 2018 kamilchmiel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire
import SwiftyJSON
import RealmSwift

class MapWorker
{
    private let WEATHER_URL = "http://api.openweathermap.org/data/2.5/weather"
    private let APP_ID = "293e30634637ee295e7d6725873e8a46"
    
    func fetchWeatherData(lon: Double, lat: Double, save: Bool, completion: @escaping (_ result: WeatherDataModel?) -> Void){
        
        let params : [String : Any] = ["lat" : lat, "lon" : lon, "appid" : APP_ID]
        
        Alamofire.request(WEATHER_URL, method: .get, parameters: params).responseJSON {
            response in
            if(response.result.isSuccess){
                let weatherJSON: JSON = JSON(response.result.value!)
                
                if let temperature =  weatherJSON["main"]["temp_max"].double {
                    
                    let weatherData = WeatherDataModel()
                    weatherData.city = weatherJSON["name"].stringValue
                    weatherData.desc = weatherJSON["weather"].array![0]["description"].stringValue
                    weatherData.temperature = Int(temperature - 273.15)
                    weatherData.latitude = lat
                    weatherData.longitude = lon
                    
                    if save {
                        self.saveLocation(data: weatherData)
                    }
                    completion(weatherData)
                }
                else{
                    
                }
            }
            else{
                print("Error \(response.result.error)")
                completion(nil)
            }
            
        }
        
    }
    
    func saveLocation(data: WeatherDataModel) {
        let newLocation = LocationModel()
        newLocation.name = data.city
        newLocation.latitude = data.latitude
        newLocation.longitude = data.longitude
        let realm = try! Realm()
        try! realm.write {
            realm.add(newLocation)
        }
    }
}
